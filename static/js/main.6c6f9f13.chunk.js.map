{"version":3,"sources":["components/Bank-Account/Balance/Balance.module.css","components/Bank-Account/TransactionHistory/TransactionHistory.module.css","components/Bank-Account/Controls/Controls.module.css","components/Bank-Account/Controls/Controls.js","components/Bank-Account/Balance/Balance.js","components/Bank-Account/TransactionHistory/TransactionHistory.js","components/Bank-Account/Dashboard/Dashboard.js","components/App.js","index.js"],"names":["module","exports","Controls","state","value","handleChange","event","setState","target","handleClickDeposit","Number","props","onClickDeposit","handleClickWithdraw","onClickWithdraw","this","className","styles","controls","type","input","onChange","placeholder","button","onClick","Component","Balance","balance","income","expense","balance_downward","material_icons","balance_upward","balance_item","TransactionHistory","transactions","history","map","transaction","key","id","amount","date","shortid","require","Date","Transaction","DEPOSIT","WITHDRAW","Dashboard","filter","reduce","item","itemOperation","onClickButtonDeposit","generate","toLocaleString","alert","prevState","onClickButtonWithdraw","dashboard","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.6c6f9f13.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance___Oi5U\",\"balance_downward\":\"Balance_balance_downward__IxJSd\",\"balance_upward\":\"Balance_balance_upward__qp94R\",\"material_icons\":\"Balance_material_icons__22pPN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__2xDy2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__1H3eG\",\"input\":\"Controls_input__1Uarx\",\"button\":\"Controls_button__1lK37\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Controls.module.css';\r\n\r\nexport default class Controls extends Component {\r\n  static propTypes = {\r\n    onClickDeposit: PropTypes.func.isRequired,\r\n    onClickWithdraw: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    value: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      value: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleClickDeposit = () => {\r\n    const value = Number(this.state.value);\r\n    this.props.onClickDeposit(value);\r\n\r\n    this.setState({\r\n      value: '',\r\n    });\r\n  };\r\n\r\n  handleClickWithdraw = () => {\r\n    const value = Number(this.state.value);\r\n    this.props.onClickWithdraw(value);\r\n\r\n    this.setState({\r\n      value: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { value } = this.state;\r\n    return (\r\n      <section className={styles.controls}>\r\n        <input\r\n          type=\"number\"\r\n          className={styles.input}\r\n          onChange={this.handleChange}\r\n          value={value}\r\n          placeholder=\"Enter amount ...\"\r\n        />\r\n        <button\r\n          type=\"button\"\r\n          className={styles.button}\r\n          onClick={this.handleClickDeposit}\r\n        >\r\n          Deposit{' '}\r\n        </button>{' '}\r\n        <button\r\n          type=\"button\"\r\n          className={styles.button}\r\n          onClick={this.handleClickWithdraw}\r\n        >\r\n          Withdraw{' '}\r\n        </button>{' '}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Balance.module.css';\r\n\r\nconst Balance = ({ balance, income, expense }) => (\r\n  <section className={styles.balance}>\r\n    <span className={styles.balance_downward}>\r\n      <i className={styles.material_icons}> arrow_downward </i> {income}${' '}\r\n    </span>{' '}\r\n    <span className={styles.balance_upward}>\r\n      <i className={styles.material_icons}> arrow_upward </i> {expense}${' '}\r\n    </span>{' '}\r\n    <span className={styles.balance_item}> Balance: {balance}$ </span>{' '}\r\n  </section>\r\n);\r\n\r\nBalance.propTypes = {\r\n  balance: PropTypes.number.isRequired,\r\n  income: PropTypes.number.isRequired,\r\n  expense: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Balance;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => (\n  <table className={styles.history}>\n    <thead>\n      <tr>\n        <th> Transaction </th> <th> Amount </th> <th> Date </th>{' '}\n      </tr>{' '}\n    </thead>{' '}\n    <tbody>\n      {' '}\n      {transactions.map(transaction => (\n        <tr key={transaction.id}>\n          <td> {transaction.type} </td> <td> {transaction.amount} </td>{' '}\n          <td> {transaction.date} </td>{' '}\n        </tr>\n      ))}{' '}\n    </tbody>{' '}\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\r\nimport Controls from '../Controls/Controls';\r\nimport Balance from '../Balance/Balance';\r\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\r\nimport styles from '../../../stylesBank.css';\r\n\r\nconst shortid = require('shortid');\r\n\r\nconst date = new Date();\r\n\r\nconst Transaction = {\r\n  DEPOSIT: 'Deposit',\r\n  WITHDRAW: 'Withdraw',\r\n};\r\n\r\nexport default class Dashboard extends Component {\r\n  state = {\r\n    history: [],\r\n    balance: 0,\r\n  };\r\n\r\n  income = () => {\r\n    const { history } = this.state;\r\n    return history\r\n      .filter(transaction => transaction.type === 'Deposit')\r\n      .reduce((item, itemOperation) => item + itemOperation.amount, 0);\r\n  };\r\n\r\n  expense = () => {\r\n    const { history } = this.state;\r\n    return history\r\n      .filter(transaction => transaction.type === 'Withdraw')\r\n      .reduce((item, itemOperation) => item + itemOperation.amount, 0);\r\n  };\r\n\r\n  onClickButtonDeposit = value => {\r\n    const item = {\r\n      id: shortid.generate(),\r\n      type: Transaction.DEPOSIT,\r\n      amount: value,\r\n      date: date.toLocaleString(),\r\n    };\r\n\r\n    if (value === 0) {\r\n      alert('Введите сумму для проведения операции!');\r\n    } else\r\n      this.setState(prevState => ({\r\n        balance: prevState.balance + value,\r\n        history: [...prevState.history, item],\r\n      }));\r\n  };\r\n\r\n  onClickButtonWithdraw = value => {\r\n    const item = {\r\n      id: shortid.generate(),\r\n      type: Transaction.WITHDRAW,\r\n      amount: value,\r\n      date: date.toLocaleString(),\r\n    };\r\n\r\n    if (value === 0) {\r\n      alert('Введите сумму для проведения операции!');\r\n    } else if (value > this.state.balance) {\r\n      alert('На счету недостаточно средств для проведения операции!');\r\n    } else\r\n      this.setState(prevState => ({\r\n        balance: prevState.balance - value,\r\n        history: [...prevState.history, item],\r\n      }));\r\n  };\r\n\r\n  render() {\r\n    const { history, balance } = this.state;\r\n\r\n    return (\r\n      <div className={styles.dashboard}>\r\n        <Controls\r\n          onClickDeposit={this.onClickButtonDeposit}\r\n          onClickWithdraw={this.onClickButtonWithdraw}\r\n        />{' '}\r\n        <Balance\r\n          balance={balance}\r\n          income={this.income(history)}\r\n          expense={this.expense(history)}\r\n        />{' '}\r\n        <TransactionHistory transactions={history} />{' '}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport Dashboard from './Bank-Account/Dashboard/Dashboard';\n\nconst App = () => <Dashboard />;\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './styles.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}